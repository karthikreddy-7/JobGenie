from ollama import chat

prompt="""
{"header":{"full_name":"Karthik Reddy B","location":"Mumbai","phone":"9063007185","email":"basupallykarthikreddy@gmail.com","linkedin":"LinkedIn","github":"GitHub","portfolio":"Portfolio"},"summary":null,"education":[{"id":"edu1","institution":"VIT University","degree":"Bachelor of Technology (B.Tech) in Electronics & Communication Engineering","city":"Vellore, Tamil Nadu, India","start_date":"Sep 2020","end_date":"May 2024","gpa":"8.7/10.0","coursework":""}],"experience":[{"id":"exp1","company":"Nomura","role":"Software Engineer","city":"Mumbai","start_date":"Jul 2024","end_date":"Present","bullets":["Served as Subject Matter Expert (SME) for 3+ critical downstream adapters, leveraging Java and Apache Camel microservices to manage high-volume client reporting, End-of-Day (EOD) trades, and regulatory flows within prime brokerage operations.","Pioneered a high-throughput Java Spring Boot microservice for regulatory trade persistence, optimizing an MS SQL-based storage solution. Accelerated processing of 60M+ transactions over 3 years by cutting insertion times from 6-7 seconds to 40 milliseconds through advanced query optimization and caching strategies.","Led the ”Sonar Auto Fix” initiative, deploying Dockerized GitLab runners for automated resolution of 500+ monthly code vulnerabilities. This CI/CD-integrated solution, utilizing LLM agentic workflows, reduced manual remediation by 40% for automated refactoring and documentation.","Developed Python AI scripts to automate bulk code editing across 20+ microservices, integrating Jira and GitLab APIs to streamline and enhance DevOps workflows."]},{"id":"exp2","company":"Techwondoe","role":"Full-Stack Developer intern","city":"Remote","start_date":"Apr 2024","end_date":"Jul 2024","bullets":["Architected and implemented scalable RESTful APIs for a multi-tenant Task Management System using NestJS, TypeORM, and PostgreSQL, achieving 99.9% API uptime during production load testing.","Engineered a multi-layer data validation pipeline utilizing class-validator decorators, custom validation schemas, and pre-save hooks, which reduced invalid field submissions by 35% and streamlined data integrity.","Designed and integrated JWT-based authentication and role-based access control, improving security posture and reducing unauthorized access incidents by 45%.","Introduced Swagger/OpenAPI 3.0 documentation, decreasing onboarding time for frontend teams by 60% for API consumption."]}],"projects":[{"id":"proj1","title":"InfyTrade","date":"","technologies":"ReactJS, ChartJS, Flask, Django, PostgreSQL, Docker, AWS, ML models (Python), Figma, REST APIs.","link":"GitHub","description_bullets":["Developed a scalable, cloud-native backend on AWS with Dockerized Flask/Django microservices and PostgreSQL, integrating Machine Learning models (Python) for real-time portfolio management and predictive analytics across 20+ RESTful APIs.","Enabled users to analyze stocks, forex, crypto, and F&O via a live code editor for custom ML model development and algorithmic trading strategies."]},{"id":"proj2","title":"AGRI.AI","date":"","technologies":"ReactJS, Django, Python, Machine Learning, Deep Learning, CNN, Random Forest, Decision Trees, Vercel.","link":"GitHub","description_bullets":["Crafted a predictive analytics platform using Machine Learning (ML) and Deep Learning (DL) to optimize agriculture, delivering crop recommendations and disease detection.","Integrated Random Forest, Decision Trees, and CNN models within a Django backend to analyze soil data and plant images for accurate, real-time insights."]}],"skills":{"programming_languages":["Java","Python","JavaScript","SQL","HTML/CSS","YAML"],"frameworks_tools":["Spring Boot","Apache Camel","NestJs","FastApi","Flask","React.js","Spring Data JPA","TypeORM","REST APIs","Docker","Git","GitHub","GitLab","Jira","VS Code","Apache Kafka","Swagger/OpenAPI","CI/CD","LLM Agentic Workflows"],"other":["Data Structures & Algorithms","RESTful APIs","Microservices","Object-Oriented Programming (OOP)","Test-Driven Development (TDD)","System Design","Full-Stack Development","Agile Methodologies"]},"certifications":[{"id":"cert1","title":"5+ skill badges/certifications","issuer":"IBM, Cisco, Google, AWS","date":""},{"id":"cert2","title":"Led and organized weekly coding sessions for the Tech Enthusiasts Club","issuer":"","date":""}]}
"""
stream = chat(
    model='gemma3:1b',
    #model='gemma3:270m',
    messages=[{'role': 'user', 'content':prompt + " Can you return karthik email"}],
    stream=True,
)
for chunk in stream:
    print(chunk['message']['content'], end='', flush=True)